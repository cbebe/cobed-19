{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","props","data","confirmed","recovered","deaths","lastUpdate","DateStr","Date","toDateString","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","active","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","url","fetchData","country","a","dynamicUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","onCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","handleCountryChange","fetchedData","setState","this","src","cobedImage","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.814c62bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3GBwC\",\"card\":\"Cards_card__Ur-N6\",\"active\":\"Cards_active__gcpkw\",\"recovered\":\"Cards_recovered__1jKjE\",\"deaths\":\"Cards_deaths__26aNO\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = (props) => {\r\n  const { confirmed, recovered, deaths, lastUpdate } = props.data;\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n  const DateStr = new Date(lastUpdate).toDateString();\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Active Cases</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed.value - (recovered.value + deaths.value)} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{DateStr}</Typography>\r\n            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{DateStr}</Typography>\r\n            <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{DateStr}</Typography>\r\n            <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let dynamicUrl = url;\r\n\r\n  if (country) {\r\n    dynamicUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(dynamicUrl);\r\n    \r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch(error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData  = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    \r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    \r\n    return modifiedData;\r\n  } catch(error) {\r\n\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    \r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const { confirmed, recovered, deaths } = data;\r\n  useEffect(() => {\r\n    (async () => setDailyData(await fetchDailyData()))();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n      ? <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{\r\n          data: dailyData.map(({ confirmed }) => confirmed),\r\n          label: 'Infected',\r\n          borderColor: '#3333ff',\r\n          fill: true,\r\n        }, {\r\n          data: dailyData.map(({ deaths }) => deaths),\r\n          label: 'Deaths',\r\n          borderColor: 'red',\r\n          backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n          fill: true,\r\n        }],\r\n      }}\r\n      /> : null \r\n  );\r\n\r\n  const barChart = (\r\n    confirmed\r\n      ? <Bar \r\n          data={{\r\n            labels: ['Confirmed', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor: [\r\n                'rgba(0, 0, 255, 0.5)',\r\n                'rgba(0, 255, 0, 0.5)',\r\n                'rgba(255, 0, 0, 0.5)',\r\n              ],\r\n              data: [confirmed.value,recovered.value, deaths.value],\r\n            }]\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text:`Current state in ${country}`},\r\n          }}\r\n      /> : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ onCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => {onCountryChange(e.target.value)}}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option value={country} key={i}>{country}</option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport { fetchData } from './api';\r\nimport styles from './App.module.css';\r\nimport cobedImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.handleCountryChange();\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={cobedImage} className={styles.image} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker onCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2eD07\",\"image\":\"App_image__13FGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3C3sY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2-YmH\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}